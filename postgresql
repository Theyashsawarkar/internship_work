-- ddl

-- create

create database practiceDB ;
create schema practiceSchema ;
create table practiceSchema.practiceTable(
	id serial primary key,
	name varchar(266) not null ,
	age int check(age > 0)
) ;

create view practiceView as 
select * from practiceSchema.practiceTable ;

create index practiceIndex on practiceSchema.practiceTable(name) ;

-- alter

-- tables

alter table practiceSchema.practiceTable
rename to practiceSchema.renamedTable ;

alter table practiceSchema.renamedTable
rename column name to nameOfPerson ;

alter table practiceSchema.renamedTable
add someRandomColumn int default 8 ;

alter table practiceSchema.renameTable
drop column someRandomColumn ;

-- truncate

truncate practiceSchema.renamedTable cascade ;

-- drop

drop table if exists practiceSchema.renamedTable cascade ;

drop schema if exists practiceSchema cascade ;

drop database if exists practiceDb ;


-- DML

-- insert

insert into practiceSchema.renamedTable(name)
values ('name1'),
		('name2') ;
		
-- update

update practiceSchema.renamedTable
set name = 'first'
where id = 1 ;

-- delete
delete from practiceSchema.renamedTable
where id <> 1 ;

-- DQL

-- select

select * from practiceSchema.renamedTable ;

select * from practiceSchema.renamedTable 
where id > 5 ;

select name , age from practiceSchema.renamedTable
group by age
having count(*) > 2 ;

-- joins

-- inner join

select * from practiceSchema.leftTable as l
inner join practiceSchema.rightTable as r
on l.rId = r.Id ;

-- left join

select * from practiceSchema.leftTable as l
left join practiceSchema.rightTable as r
on l.rId = r.Id ;

-- right join

select * from practiceSchema.leftTable as l
right join practiceSchema.rightTable as r
on l.rId = r.Id ;

-- full outer join

select * from practiceSchema.leftTable as l
full outer join practiceSchema.rightTable as r
on l.rId = r.Id ;

-- cross join

select * from practiceSchema.leftTable
cross join practiceSchema.rightTable ;


-- subqueries

select * from practiceSchema.renamedTable
where id not in 
(select id from practiceSchema.renamedTable where name not ilike 'jadu') ;
